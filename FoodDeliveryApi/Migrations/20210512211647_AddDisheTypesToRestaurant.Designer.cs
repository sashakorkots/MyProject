// <auto-generated />
using System;
using FoodDeliveryApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FoodDeliveryApi.Migrations
{
    [DbContext(typeof(FoodDeliveryContext))]
    [Migration("20210512211647_AddDisheTypesToRestaurant")]
    partial class AddDisheTypesToRestaurant
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FoodDeliveryApi.Models.Dish", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CookingTime")
                        .HasColumnType("interval")
                        .HasColumnName("cooking_time");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer")
                        .HasColumnName("restaurant_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("ID")
                        .HasName("pk_dishes");

                    b.HasIndex("RestaurantId")
                        .HasDatabaseName("ix_dishes_restaurant_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_dishes_type_id");

                    b.ToTable("dishes");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.DishType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer")
                        .HasColumnName("restaurant_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("ID")
                        .HasName("pk_dish_types");

                    b.HasIndex("RestaurantId")
                        .HasDatabaseName("ix_dish_types_restaurant_id");

                    b.ToTable("dish_types");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("OpeningTime")
                        .HasColumnType("text")
                        .HasColumnName("opening_time");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_restaurants");

                    b.ToTable("restaurants");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Dish", b =>
                {
                    b.HasOne("FoodDeliveryApi.Models.Restaurant", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("fk_dishes_restaurants_restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApi.Models.DishType", "Type")
                        .WithMany("Dishes")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_dishes_dish_types_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.DishType", b =>
                {
                    b.HasOne("FoodDeliveryApi.Models.Restaurant", "Restaurant")
                        .WithMany("DishTypes")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("fk_dish_types_restaurants_restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.DishType", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Restaurant", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("DishTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
