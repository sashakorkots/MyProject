// <auto-generated />
using System;
using FoodDeliveryApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FoodDeliveryApi.Migrations
{
    [DbContext(typeof(FoodDeliveryContext))]
    [Migration("20210516223134_AddClient")]
    partial class AddClient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FoodDeliveryApi.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_clients");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone_number")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer")
                        .HasColumnName("restaurant_id");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_couriers");

                    b.HasIndex("RestaurantId")
                        .HasDatabaseName("ix_couriers_restaurant_id");

                    b.ToTable("couriers");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Dish", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CookingTime")
                        .HasColumnType("interval")
                        .HasColumnName("cooking_time");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer")
                        .HasColumnName("restaurant_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("ID")
                        .HasName("pk_dishes");

                    b.HasIndex("RestaurantId")
                        .HasDatabaseName("ix_dishes_restaurant_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_dishes_type_id");

                    b.ToTable("dishes");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.DishType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer")
                        .HasColumnName("restaurant_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("ID")
                        .HasName("pk_dish_types");

                    b.HasIndex("RestaurantId")
                        .HasDatabaseName("ix_dish_types_restaurant_id");

                    b.ToTable("dish_types");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<int>("CourierId")
                        .HasColumnType("integer")
                        .HasColumnName("courier_id");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("text")
                        .HasColumnName("delivery_address");

                    b.Property<TimeSpan>("DeliveryTime")
                        .HasColumnType("interval")
                        .HasColumnName("delivery_time");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("order_date");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer")
                        .HasColumnName("restaurant_id");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("total_price");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_orders_client_id");

                    b.HasIndex("CourierId")
                        .HasDatabaseName("ix_orders_courier_id");

                    b.HasIndex("RestaurantId")
                        .HasDatabaseName("ix_orders_restaurant_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.OrderDish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<int>("DishId")
                        .HasColumnType("integer")
                        .HasColumnName("dish_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.HasKey("Id")
                        .HasName("pk_order_dishes");

                    b.HasIndex("DishId")
                        .HasDatabaseName("ix_order_dishes_dish_id");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_dishes_order_id");

                    b.ToTable("order_dishes");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("OpeningTime")
                        .HasColumnType("text")
                        .HasColumnName("opening_time");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_restaurants");

                    b.ToTable("restaurants");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Courier", b =>
                {
                    b.HasOne("FoodDeliveryApi.Models.Restaurant", "Restaurant")
                        .WithMany("Couriers")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("fk_couriers_restaurants_restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Dish", b =>
                {
                    b.HasOne("FoodDeliveryApi.Models.Restaurant", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("fk_dishes_restaurants_restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApi.Models.DishType", "Type")
                        .WithMany("Dishes")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_dishes_dish_types_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.DishType", b =>
                {
                    b.HasOne("FoodDeliveryApi.Models.Restaurant", "Restaurant")
                        .WithMany("DishTypes")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("fk_dish_types_restaurants_restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Order", b =>
                {
                    b.HasOne("FoodDeliveryApi.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_orders_clients_client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApi.Models.Courier", "Courier")
                        .WithMany()
                        .HasForeignKey("CourierId")
                        .HasConstraintName("fk_orders_couriers_courier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApi.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("fk_orders_restaurants_restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Courier");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.OrderDish", b =>
                {
                    b.HasOne("FoodDeliveryApi.Models.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .HasConstraintName("fk_order_dishes_dishes_dish_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApi.Models.Order", "Order")
                        .WithMany("OrderDishes")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_order_dishes_orders_order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.DishType", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Order", b =>
                {
                    b.Navigation("OrderDishes");
                });

            modelBuilder.Entity("FoodDeliveryApi.Models.Restaurant", b =>
                {
                    b.Navigation("Couriers");

                    b.Navigation("Dishes");

                    b.Navigation("DishTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
